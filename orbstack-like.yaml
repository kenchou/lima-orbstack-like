# orbstack.yaml
# Usage:
#   limactl start ./orbstack.yaml
#   export KUBECONFIG="$HOME/.lima/orbstack-like/copied-from-guest/kubeconfig.yaml"
#   # On host: brew install nerdctl && sudo ln -sf $(brew --prefix)/bin/nerdctl /usr/local/bin/docker
#   # Add to ~/.zshrc:
#   #   export CONTAINERD_ADDRESS="unix://$HOME/.lima/orbstack-like/sock/containerd.sock"
#   #   export CONTAINERD_NAMESPACE="k8s.io"

minimumLimaVersion: 1.1.0

base:
- template://_images/ubuntu-lts
- template://_default/mounts

# Disable Lima's default containerd (we use k3s's)
containerd:
  system: false
  user: false

provision:
- mode: system
  script: |
    #!/bin/sh
    set -x
    exec >> /dev/hvc0 2>&1
    export DEBIAN_FRONTEND=noninteractive

    # Install k3s (includes containerd)
    if [ ! -f /usr/local/bin/k3s ]; then
      curl -sfL https://get.k3s.io | INSTALL_K3S_EXEC="--write-kubeconfig-mode 644" sh -
    fi

    # Install latest nerdctl
    apt-get update
    apt-get install -y curl ca-certificates
    ARCH=$(dpkg --print-architecture)
    if [ "$ARCH" = "arm64" ]; then
      NERD_ARCH="arm64"
    elif [ "$ARCH" = "amd64" ]; then
      NERD_ARCH="amd64"
    else
      echo "Unsupported architecture: $ARCH" >&2
      exit 1
    fi
    NERDCTL_VERSION=$(curl -fsSL https://api.github.com/repos/containerd/nerdctl/releases/latest | grep '"tag_name":' | head -n1 | cut -d'"' -f4 | sed 's/^v//')
    curl -fsSL "https://github.com/containerd/nerdctl/releases/download/v${NERDCTL_VERSION}/nerdctl-${NERDCTL_VERSION}-linux-${NERD_ARCH}.tar.gz" | tar -C /usr/local/bin -xz

    # Ensure k3s containerd socket is accessible
    mkdir -p /etc/nerdctl
    cat > /etc/nerdctl/nerdctl.toml <<'EOF'
    namespace = "k8s.io"
    address = "unix:///run/k3s/containerd/containerd.sock"
    EOF
    echo "Done."

probes:
- script: |
    #!/bin/bash
    set -eux -o pipefail
    timeout 60s bash -c 'until [ -f /etc/rancher/k3s/k3s.yaml ] && [ -S /run/k3s/containerd/containerd.sock ] && [ -f /etc/nerdctl/nerdctl.toml ]; do sleep 2; done'

# Copy kubeconfig to host
copyToHost:
- guest: "/etc/rancher/k3s/k3s.yaml"
  host: "{{.Dir}}/copied-from-guest/kubeconfig.yaml"
  deleteOnStop: true

# Expose containerd socket to host for host-side nerdctl (i.e., your 'docker')
portForwards:
- guestSocket: "/run/k3s/containerd/containerd.sock"
  hostSocket: "{{.Dir}}/sock/containerd.sock"

# Optional: enable registry mirrors via ~/.lima/_config/registries.yaml
# Lima will auto-inject it into k3s and nerdctl

message: |
  To use kubectl, we recommend creating a kubeconfig context (no env vars needed):
  ------
  1. Merge the kubeconfig into your default config:
       KUBECONFIG="$HOME/.kube/config:{{.Dir}}/copied-from-guest/kubeconfig.yaml" \
       kubectl config view --flatten > "$HOME/.kube/config.new" && \
       mv "$HOME/.kube/config.new" "$HOME/.kube/config"
  2. List contexts to find the new one (e.g., "lima-orbstack-like"):
       kubectl config get-contexts
  3. Switch to it:
       kubectl config use-context lima-orbstack-like
  4. Now run:
       kubectl get nodes
       kubectl get pods -A
  ------
  To use 'docker' on the host (macOS):
  ‚úÖ Recommended: Use Docker context (no env vars needed)
  ------
    1. Install Docker CLI (not Docker Desktop):
         brew install docker
    2. Create a context:
         docker context create lima-orbstack-like \
           --description "OrbStack-like Lima VM" \
           --docker "host=unix://{{.Dir}}/sock/containerd.sock" \
           --kubernetes "config-file={{.Dir}}/copied-from-guest/kubeconfig.yaml"
    3. Switch to it:
         docker context use lima-orbstack-like
    4. Now run:
         docker images
         docker build -t myapp .
  ------
  üîÅ Alternative: Use KUBECONFIG environment variable
  ------
  ‚Ä¢ For Bash (~/.bashrc):
      echo 'export KUBECONFIG="{{.Dir}}/copied-from-guest/kubeconfig.yaml"' >> ~/.bashrc
      source ~/.bashrc
  ‚Ä¢ For Zsh (~/.zshrc):
      echo 'export KUBECONFIG="{{.Dir}}/copied-from-guest/kubeconfig.yaml"' >> ~/.zshrc
      source ~/.zshrc
  ‚Ä¢ For Fish (~/.config/fish/config.fish):
      set -Ux KUBECONFIG "{{.Dir}}/copied-from-guest/kubeconfig.yaml"
  ------
  üîÅ Alternative: Use environment variables for containerd
  ------
  ‚Ä¢ For Bash/Zsh:
      export CONTAINERD_ADDRESS="unix://{{.Dir}}/sock/containerd.sock"
      export CONTAINERD_NAMESPACE="k8s.io"
  ‚Ä¢ For Fish:
      set -Ux CONTAINERD_ADDRESS "unix://{{.Dir}}/sock/containerd.sock"
      set -Ux CONTAINERD_NAMESPACE "k8s.io"
  ------
  Note: nerdctl is not required on macOS. The Docker CLI communicates directly with containerd in the Lima VM.
